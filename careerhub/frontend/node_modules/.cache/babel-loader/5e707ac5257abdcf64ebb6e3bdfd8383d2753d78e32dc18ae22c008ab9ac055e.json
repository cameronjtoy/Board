{"ast":null,"code":"var _jsxFileName = \"/Users/camerontoy/Job Tracker Web App/CareerHub/careerhub/frontend/src/components/Profile/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Profile.css\";\nimport Cell from \"../Buttons/Cell\";\nimport { createColumnHelper, flexRender, getCoreRowModel, useReactTable } from \"@tanstack/react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultData = [axios.get(\"http://localhost:8080/api/profile\").then(response => {\n  if (response.data && response.data.userCompanies) {\n    return response.data.userCompanies;\n  }\n}).catch(error => {\n  console.log(error);\n})];\nconst columnHelper = createColumnHelper();\nconst columns = [columnHelper.accessor(\"companyName\", \"Company Name\"), columnHelper.accessor(\"status\", \"Status\"), columnHelper.accessor(\"nextDeadline\", \"Next Deadline\"), columnHelper.accessor(\"links\", \"Links\")];\nconst Profile = () => {\n  _s();\n  const [data, setData] = useState(...defaultData);\n  console.log(\"TEST\");\n  console.log(data);\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())\n        }, header.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this))\n      }, headerGroup.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: flexRender(cell.column.columnDef.cell, cell.getContext())\n        }, cell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this))\n      }, row.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"M1duGQT5EzMK9D+w4NLzf7pZLyY=\", false, function () {\n  return [useReactTable];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","axios","Cell","createColumnHelper","flexRender","getCoreRowModel","useReactTable","jsxDEV","_jsxDEV","defaultData","get","then","response","data","userCompanies","catch","error","console","log","columnHelper","columns","accessor","Profile","_s","setData","table","children","getHeaderGroups","map","headerGroup","headers","header","isPlaceholder","column","columnDef","getContext","id","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","row","getVisibleCells","cell","_c","$RefreshReg$"],"sources":["/Users/camerontoy/Job Tracker Web App/CareerHub/careerhub/frontend/src/components/Profile/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Profile.css\";\nimport Cell from \"../Buttons/Cell\";\nimport {\n    createColumnHelper,\n    flexRender,\n    getCoreRowModel,\n    useReactTable,\n} from \"@tanstack/react-table\";\n\n\n\n\nconst defaultData = [\n    axios.get(\"http://localhost:8080/api/profile\").then((response) => {\n        if (response.data && response.data.userCompanies) {\n            return response.data.userCompanies;\n        }\n    }).catch((error) => {\n        console.log(error);\n    }),\n];\n\nconst columnHelper = createColumnHelper();\n\nconst columns = [\n    columnHelper.accessor(\"companyName\", \"Company Name\"),\n    columnHelper.accessor(\"status\", \"Status\"),\n    columnHelper.accessor(\"nextDeadline\", \"Next Deadline\"),\n    columnHelper.accessor(\"links\", \"Links\"),\n];\n\nconst Profile = () => {\n    const [data, setData] = useState(...defaultData);\n    console.log(\"TEST\")\n    console.log(data);\n\n    const table = useReactTable({\n        data,\n        columns,\n        getCoreRowModel: getCoreRowModel(),\n    });\n\n    return (\n        <table>\n            <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n                <tr key={headerGroup.id}>\n                {headerGroup.headers.map((header) => (\n                    <th key={header.id}>\n                    {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                        )}\n                    </th>\n                ))}\n                </tr>\n            ))}\n            </thead>\n            <tbody>\n            {table.getRowModel().rows.map((row) => (\n                <tr key={row.id}>\n                {row.getVisibleCells().map((cell) => (\n                    <td key={cell.id}>\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                    </td>\n                ))}\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    );\n}\n\nexport default Profile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,IAAI,MAAM,iBAAiB;AAClC,SACIC,kBAAkB,EAClBC,UAAU,EACVC,eAAe,EACfC,aAAa,QACV,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK/B,MAAMC,WAAW,GAAG,CAChBR,KAAK,CAACS,GAAG,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;EAC9D,IAAIA,QAAQ,CAACC,IAAI,IAAID,QAAQ,CAACC,IAAI,CAACC,aAAa,EAAE;IAC9C,OAAOF,QAAQ,CAACC,IAAI,CAACC,aAAa;EACtC;AACJ,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;EAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;AACtB,CAAC,CAAC,CACL;AAED,MAAMG,YAAY,GAAGhB,kBAAkB,CAAC,CAAC;AAEzC,MAAMiB,OAAO,GAAG,CACZD,YAAY,CAACE,QAAQ,CAAC,aAAa,EAAE,cAAc,CAAC,EACpDF,YAAY,CAACE,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,EACzCF,YAAY,CAACE,QAAQ,CAAC,cAAc,EAAE,eAAe,CAAC,EACtDF,YAAY,CAACE,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC,CAC1C;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACV,IAAI,EAAEW,OAAO,CAAC,GAAGzB,QAAQ,CAAC,GAAGU,WAAW,CAAC;EAChDQ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnBD,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;EAEjB,MAAMY,KAAK,GAAGnB,aAAa,CAAC;IACxBO,IAAI;IACJO,OAAO;IACPf,eAAe,EAAEA,eAAe,CAAC;EACrC,CAAC,CAAC;EAEF,oBACIG,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EACCD,KAAK,CAACE,eAAe,CAAC,CAAC,CAACC,GAAG,CAAEC,WAAW,iBACrCrB,OAAA;QAAAkB,QAAA,EACCG,WAAW,CAACC,OAAO,CAACF,GAAG,CAAEG,MAAM,iBAC5BvB,OAAA;UAAAkB,QAAA,EACCK,MAAM,CAACC,aAAa,GACf,IAAI,GACJ5B,UAAU,CACR2B,MAAM,CAACE,MAAM,CAACC,SAAS,CAACH,MAAM,EAC9BA,MAAM,CAACI,UAAU,CAAC,CACtB;QAAC,GANIJ,MAAM,CAACK,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOd,CACP;MAAC,GAVOX,WAAW,CAACO,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWnB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eACRhC,OAAA;MAAAkB,QAAA,EACCD,KAAK,CAACgB,WAAW,CAAC,CAAC,CAACC,IAAI,CAACd,GAAG,CAAEe,GAAG,iBAC9BnC,OAAA;QAAAkB,QAAA,EACCiB,GAAG,CAACC,eAAe,CAAC,CAAC,CAAChB,GAAG,CAAEiB,IAAI,iBAC5BrC,OAAA;UAAAkB,QAAA,EACCtB,UAAU,CAACyC,IAAI,CAACZ,MAAM,CAACC,SAAS,CAACW,IAAI,EAAEA,IAAI,CAACV,UAAU,CAAC,CAAC;QAAC,GADjDU,IAAI,CAACT,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACP;MAAC,GALOG,GAAG,CAACP,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAAAjB,EAAA,CA1CKD,OAAO;EAAA,QAKKhB,aAAa;AAAA;AAAAwC,EAAA,GALzBxB,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}