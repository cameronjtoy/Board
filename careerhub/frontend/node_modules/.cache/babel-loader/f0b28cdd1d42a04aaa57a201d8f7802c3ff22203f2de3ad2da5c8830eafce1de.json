{"ast":null,"code":"var _jsxFileName = \"/Users/camerontoy/Board/careerhub/frontend/src/components/Profile/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Profile.css\";\nimport Cell from \"../Buttons/Cell\";\nimport { createColumnHelper, flexRender, getCoreRowModel, useReactTable } from \"@tanstack/react-table\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setData, setEditedRows, updateData } from '../Redux/Table/tableSlice';\nimport TableCellContext from \"../Redux/Table/tableContext\";\nimport Plus from \"../../assets/plus\";\nimport Form from \"../Form/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columnHelper = createColumnHelper();\nconst columns = [columnHelper.accessor(\"company_name\", {\n  header: \"Company Name\",\n  cell: Cell,\n  meta: {\n    type: \"text\"\n  }\n}), columnHelper.accessor(\"status\", {\n  header: \"Stage\",\n  cell: Cell,\n  meta: {\n    type: \"select\",\n    options: [{\n      label: \"Applied\",\n      value: \"Applied\"\n    }, {\n      label: \"Interviewing\",\n      value: \"Interviewing\"\n    }, {\n      label: \"Offer\",\n      value: \"Offer\"\n    }, {\n      label: \"Rejected\",\n      value: \"Rejected\"\n    }]\n  }\n}), columnHelper.accessor(\"next_deadline\", {\n  header: \"Next Deadline\",\n  cell: Cell,\n  meta: {\n    type: \"date\"\n  }\n}), columnHelper.accessor(\"links\", {\n  header: \"Links\",\n  cell: Cell,\n  meta: {\n    type: \"text\"\n  }\n})];\nconst Profile = () => {\n  _s();\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.table.data);\n  const editedRows = useSelector(state => state.table.editedRows);\n  const [cellBeingEdited, setCellBeingEdited] = useState(null); // default to no cell being edited\n\n  const startEditing = (rowIndex, columnId) => {\n    setCellBeingEdited({\n      rowIndex,\n      columnId\n    });\n  };\n  const stopEditing = () => {\n    setCellBeingEdited(null);\n  };\n  const isCellEditable = (rowIndex, columnId) => {\n    // Allow editing if no cell is being edited OR if the cell being edited is the current cell.\n    return !cellBeingEdited || cellBeingEdited.rowIndex === rowIndex && cellBeingEdited.columnId === columnId;\n  };\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/profile\", {\n      withCredentials: true\n    }).then(res => {\n      dispatch(setData(res.data.userCompanies));\n    });\n  }, [dispatch]);\n  const [newRow, setNewRow] = useState({\n    company_name: \"\",\n    status: \"\",\n    next_deadline: \"\",\n    links: \"\"\n  });\n  const handleNewRowChange = (columnId, value) => {\n    setNewRow({\n      ...newRow,\n      [columnId]: value\n    });\n  };\n  const addRowToTable = newRowData => {\n    // Dispatch action to add new row to the Redux store\n    dispatch(addRow(newRowData)); // 'addRow' is an action creator\n  };\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    meta: {\n      editedRows,\n      setEditedRows: rows => dispatch(setEditedRows(rows)),\n      updateData: (rowIndex, columnId, value) => {\n        dispatch(updateData({\n          rowIndex,\n          columnId,\n          value\n        }));\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableCellContext.Provider, {\n      value: {\n        isCellEditable,\n        startEditing,\n        stopEditing\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())\n            }, header.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this))\n          }, headerGroup.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: flexRender(cell.column.columnDef.cell, cell.getContext())\n            }, cell.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this))\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 7\n  }, this);\n};\n_s(Profile, \"QZbTsdVzMm+RxjcxlmkSPxt7VcQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useReactTable];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","axios","Cell","createColumnHelper","flexRender","getCoreRowModel","useReactTable","useSelector","useDispatch","setData","setEditedRows","updateData","TableCellContext","Plus","Form","jsxDEV","_jsxDEV","columnHelper","columns","accessor","header","cell","meta","type","options","label","value","Profile","_s","dispatch","data","state","table","editedRows","cellBeingEdited","setCellBeingEdited","startEditing","rowIndex","columnId","stopEditing","isCellEditable","get","withCredentials","then","res","userCompanies","newRow","setNewRow","company_name","status","next_deadline","links","handleNewRowChange","addRowToTable","newRowData","addRow","rows","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Provider","getHeaderGroups","map","headerGroup","headers","isPlaceholder","column","columnDef","getContext","id","getRowModel","row","getVisibleCells","_c","$RefreshReg$"],"sources":["/Users/camerontoy/Board/careerhub/frontend/src/components/Profile/Profile.jsx"],"sourcesContent":["  import React, { useEffect, useState } from \"react\";\n  import axios from \"axios\";\n  import \"./Profile.css\";\n  import Cell from \"../Buttons/Cell\";\n  import { createColumnHelper, flexRender, getCoreRowModel, useReactTable } from \"@tanstack/react-table\";\n  import { useSelector, useDispatch } from 'react-redux';\n  import { setData, setEditedRows, updateData } from '../Redux/Table/tableSlice';\n  import TableCellContext from \"../Redux/Table/tableContext\"\n  import Plus from \"../../assets/plus\";\n  import Form from \"../Form/Form\";\n\n\n  const columnHelper = createColumnHelper();\n\n\n  const columns = [\n    columnHelper.accessor(\"company_name\", {\n      header: \"Company Name\",\n      cell: Cell,\n      meta: {\n        type: \"text\",\n      },\n\n    }),\n    columnHelper.accessor(\"status\", {\n      header: \"Stage\",\n      cell: Cell,\n      meta: {\n        type: \"select\",\n        options: [\n          { label: \"Applied\", value: \"Applied\" },\n          { label: \"Interviewing\", value: \"Interviewing\" },\n          { label: \"Offer\", value: \"Offer\" },\n          { label: \"Rejected\", value: \"Rejected\" },\n        ],\n      },\n    }),\n    columnHelper.accessor(\"next_deadline\", {\n      header: \"Next Deadline\",\n      cell: Cell,\n      meta: {\n        type: \"date\",\n      },\n    }),\n    columnHelper.accessor(\"links\", {\n      header: \"Links\",\n      cell: Cell,\n      meta: {\n        type: \"text\",\n      },\n    }),\n  ];\n\n  const Profile = () => {\n    const dispatch = useDispatch();\n    const data = useSelector(state => state.table.data);\n    const editedRows = useSelector(state => state.table.editedRows);\n    const [cellBeingEdited, setCellBeingEdited] = useState(null); // default to no cell being edited\n\n    const startEditing = (rowIndex, columnId) => {\n      setCellBeingEdited({ rowIndex, columnId });\n    };\n\n    const stopEditing = () => {\n      setCellBeingEdited(null);\n    };\n\n    const isCellEditable = (rowIndex, columnId) => {\n      // Allow editing if no cell is being edited OR if the cell being edited is the current cell.\n      return !cellBeingEdited || (cellBeingEdited.rowIndex === rowIndex && cellBeingEdited.columnId === columnId);\n    };\n\n    useEffect(() => {\n      axios.get(\"http://localhost:8080/api/profile\", { withCredentials: true }).then((res) => {\n        dispatch(setData(res.data.userCompanies));\n      });\n    }, [dispatch]);\n\n    const [newRow , setNewRow] = useState({\n      company_name: \"\",\n      status: \"\",\n      next_deadline: \"\",\n      links: \"\",\n    });\n\n    const handleNewRowChange = (columnId, value) => {\n      setNewRow({ ...newRow, [columnId]: value });\n    };\n\n    const addRowToTable = (newRowData) => {\n      // Dispatch action to add new row to the Redux store\n      dispatch(addRow(newRowData)); // 'addRow' is an action creator\n    };\n\n\n    const table = useReactTable({\n      data,\n      columns,\n      getCoreRowModel: getCoreRowModel(),\n      meta: {\n        editedRows,\n        setEditedRows: (rows) => dispatch(setEditedRows(rows)),\n        updateData: (rowIndex, columnId, value) => {\n          dispatch(updateData({ rowIndex, columnId, value }));\n        },\n      }\n    });\n\n\n    return (\n      <div className=\"profile\">\n        <Form />\n      <TableCellContext.Provider value={{\n        isCellEditable,\n        startEditing,\n        stopEditing\n      }}>\n        <table>\n          <thead>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <tr key={headerGroup.id}>\n                {headerGroup.headers.map((header) => (\n                  <th key={header.id}>\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(\n                        header.column.columnDef.header,\n                        header.getContext()\n                      )}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody>\n            {table.getRowModel().rows.map((row) => (\n              <tr key={row.id}>\n                {row.getVisibleCells().map((cell) => (\n                  <td key={cell.id}>\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </TableCellContext.Provider>\n      </div>\n    );\n  }\n\n  export default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}